
#include "config_ac.h"
#include "config_sc.h"

typedef long  mxi_ELEMENT;
#define ELEMENT  mxi_ELEMENT
#define SORTCDT  short

typedef union {
	long  f;
	struct{
		short           lngth;
		SORTCDT         srtcd;
	} h;
#ifdef LOW_ENDIAN
        struct{
                short           cde;
                unsigned char   tbno;
                unsigned char   clss;
        } c;
#else
        struct{
                unsigned char   clss;
                unsigned char   tbno;
                short           cde;
        } c;
#endif
} SELEMENT;

static SELEMENT      se;
static unsigned char c;
static short         s;
static long          l;

#define slength(SE)             (SE.h.lngth)
#define ssortcd(SE)             (SE.h.srtcd)
#define sclass(SE)              (SE.c.clss)
#define stabno(SE)              (SE.c.tbno)
#define scode(SE)               (SE.c.cde)

#define length(E)               (s=(se.f=E,slength(se)))
#define sortcd(E)               (s=(se.f=E,ssortcd(se)))
#define class(E)                (c=(se.f=E,sclass(se)))
#define tabno(E)                (c=(se.f=E,stabno(se)))
#define code(E)                 (s=(se.f=E,scode(se)))
#define elemcd(E)               (l=(se.f=E,sclass(se)=0,se.f))

#define length_sortcd(L,S)      (slength(se)=L,ssortcd(se)=S,se.f)
#define class_code(C,D)         (sclass(se)=C,stabno(se)=0,scode(se)=D,se.f)
#define class_tabno_code(C,T,D) (sclass(se)=C,stabno(se)=T,scode(se)=D,se.f)
#define class_elemcd(C,E)       (se.f=(long)E,sclass(se)=C,se.f)

#define POS_CL        0x00
#define NATERM_CL     0x40
#define REF_CL        0x80
#define POINT_CL      0xC0
#define NODE_CL       0xC8
#define DEFCONST_CL   0xE0
#define SORTCONST_CL  0xE4
#define IDENT_CL      0xE8
#define UNDEF_CL      0xEC
#define BOOL_CL       0xF0
#define CHAR_CL       0xF4
#define STRING_CL     0xF8
#define NEG_CL        0xFF

#ifdef SECOND_BIT_SET
#define CODABLEPTR(p) ((long)(void*)((0x40000000L<p&&p<=0x7FFFFFFFL)||p==0L))
#define CODEPTR(p)    ((long)(void*)((p&0x3FFFFFFFL)|(1L<<31)))
#define	DECODEREF(r)  ((long)(void*)(l=(r&0x7FFFFFFFL),(l==0L?l:l|0x40000000L)))
#define ISREF(r)      ((long)(void*)((r&(3<<30))==(1<<31)))
#else
#define CODABLEPTR(p) ((long)(void*)(((3UL<<30)&p)==0UL))
#define CODEPTR(p)    ((long)(void*)(p|(1UL<<31)))
#define DECODEREF(r)  ((long)(void*)(r&0x3FFFFFFFL))
#define ISREF(r)      ((long)(void*)((r&(3UL<<30))==(1UL<<31)))
#endif

#define IFNIL(e)	{if(e==NIL) return NIL;} /*oder auskommentieren */

#define NODE_SORTCD             2
#define POINT_SORTCD            1
#define NIL_SORTCD             -1
#define TERM_SORTCD            -2
#define NODESORT_SORTCD        -3
#define PREDECLSORT_SORTCD     -4
#define CLASSSORT_SORTCD       -5
#define TUPELSORT_SORTCD       -6
#define LISTSORT_SORTCD        -7
#define IDENT_SORTCD           -8
#define BOOL_SORTCD            -9
#define CHAR_SORTCD           -10
#define INT_SORTCD            -11
#define STRING_SORTCD         -12
#define REFERENCE_SORTCD      -13

#define MIN_PREDECL_SORTCD    -13
#define MAX_PREDECL_SORTCD      2

/*  The following constants are generated by constgen.c  */
#define  MAXIMALINT     16777215L
#define  MINIMALINT     -16777216L
#define  MAXUNDEF       -335544320L
#define  ROOT           -939524095L
#define  MAXTRUE        -268435455L
#define  MAXFALSE       -268435456L
#define  NIL            -536805377L
#define  _Node          -469762046L
#define  _Point         -469762047L
#define  _nil           -469696513L
#define  _Term          -469696514L
#define  _NodeSort      -469696515L
#define  _PredeclSort   -469696516L
#define  _ClassSort     -469696517L
#define  _TupelSort     -469696518L
#define  _ListSort      -469696519L
#define  _Ident         -469696520L
#define  _Bool          -469696521L
#define  _Char          -469696522L
#define  _Int           -469696523L
#define  _String        -469696524L
#define  _Reference     -469696525L


#define INDEXABLE(cd)	(cd>0||cd==-8)


typedef  struct{
			short  ccd;
			long   offs;
		}  ScdOffsPair;

extern  SORTCDT		  mxi_tupel_sortcd_lb;
extern  SORTCDT		  mxi_list_sortcd_lb;
extern  SORTCDT		  mxi_class_sortcd_lb;
extern  SORTCDT	 	 *mxi_listtoelemtab;
extern  SORTCDT		**mxi_supsorttab;

extern  long		 *mxi_numbertab;
extern  long		  mxi_offsettab[];
extern  ScdOffsPair  *mxi_coffsettab[];

extern  long         mxi_semeval();
