/* C-Code generated by cmax */

#include "stdmax_spec.h" 
#include <stdio.h>
#include <stdlib.h>
#include "solver.h"

#define SORTERROR(e,a) fprintf(stderr, \
         "Error in usage of assn definition " #a \
         ": argument " #e " is of wrong sort!\n ") 
#define IS(e,s,a)  if (!is(e,s)) {SORTERROR(e,a); return; }
#define ISNIL(e)     if (eq(e, nil())) return;

int Verbose = 1;

ELEMENT sync__(ELEMENT e1, ELEMENT e2){return btoe(1);}
#undef used_attributes/* non-synchronizing and strict variable access */
#define mxs_used_attributes(f,l,a) (!eq(used_attributes_PTR__(a),nil()) ? ( (Variable*)mxi_etop(f,l,used_attributes_PTR__(a) ) ) -> value : nil() )
#define used_attributes(a) (mxs_used_attributes(__FILE__,__LINE__,a))
static int sm___1 (ELEMENT __args[])
{
#define A __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 662, A);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef A
#undef N
}
static int sm___2 (ELEMENT __args[])
{
#define N1 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 663, N1);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef N1
#undef N
}
static int sm___3 (ELEMENT __args[])
{
#define AL __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 664, AL);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef AL
#undef N
}
static int sm___4 (ELEMENT __args[])
{
#define F __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 665, F);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F
#undef N
}
static int sm___5 (ELEMENT __args[])
{
#define AL1 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 666, AL1);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef AL1
#undef N
}
static int sm___6 (ELEMENT __args[])
{
#define AL2 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 667, AL2);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef AL2
#undef N
}
static int sm___7 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 668, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___8 (ELEMENT __args[])
{
#define AL __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 669, AL);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef AL
#undef N
}
static int sm___9 (ELEMENT __args[])
{
#define ID __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 671, mxs_last("cmax_spec.cm", 671, mxs_Decl("cmax_spec.cm", 671, ID)));
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef ID
#undef N
}
static int sm___10 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 673, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___11 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 675, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___12 (ELEMENT __args[])
{
#define Cond __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 676, Cond);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef Cond
#undef N
}
static int sm___13 (ELEMENT __args[])
{
#define C __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 677, C);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef C
#undef N
}
static int sm___14 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 679, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___15 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 680, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___16 (ELEMENT __args[])
{
#define F __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 681, F);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F
#undef N
}
static int sm___17 (ELEMENT __args[])
{
#define DECL __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 687, DECL);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef DECL
#undef N
}
static int sm___18 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 690, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___19 (ELEMENT __args[])
{
#define DECL __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxi_appback("cmax_spec.cm", 694, Set( ), DECL);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef DECL
#undef N
}
static int sm___20 (ELEMENT __args[])
{
#define F __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 696, F);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F
#undef N
}
static int sm___21 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 697, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___22 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 698, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___23 (ELEMENT __args[])
{
#define E1 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 699, E1);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E1
#undef N
}
static int sm___24 (ELEMENT __args[])
{
#define E2 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 700, E2);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E2
#undef N
}
static int sm___25 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 701, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___26 (ELEMENT __args[])
{
#define ID __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 705, mxs_Decl("cmax_spec.cm", 705, ID));
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef ID
#undef N
}
static int sm___27 (ELEMENT __args[])
{
#define E __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 707, E);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef E
#undef N
}
static int sm___28 (ELEMENT __args[])
{
#define F1 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 710, F1);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F1
#undef N
}
static int sm___29 (ELEMENT __args[])
{
#define F2 __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 711, F2);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F2
#undef N
}
static int sm___30 (ELEMENT __args[])
{
#define F __args[0]
#define N __args[1]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 712, F);
    __vptr=used_attributes_PTR__(N);
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef F
#undef N
}
static void activate_constrs___1(void)
{
{ 
{ ELEMENT A,N;
    {long __index_2;
    long __number_2=number(_Assertion_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Assertion_);
    A = son(1,N);
    if (!(eq(rbroth(A), nil()))) goto __END_30425;
    __add_constraint(sm___1, NULL, 2, A, N);
__END_30425: ;
    }
    }
__END_26634: ;
}
{ ELEMENT N1,N;
    {long __index_2;
    long __number_2=number(_AssnList_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _AssnList_);
for(N1 = son(1, N ); !eq(nil(),N1); N1 = rbroth(N1)) {
    __add_constraint(sm___2, NULL, 2, N1, N);
__END_30428: ;
    }
__END_30427: ;
    }
    }
__END_26635: ;
}
{ ELEMENT P,AL,N;
    {long __index_2;
    long __number_2=number(_PatternAssn_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _PatternAssn_);
    P = son(1,N);
    AL = rbroth(P);
    if (!(eq(rbroth(AL), nil()))) goto __END_30429;
    __add_constraint(sm___3, NULL, 2, AL, N);
__END_30429: ;
    }
    }
__END_26636: ;
}
{ ELEMENT F,AL1,AL2,N;
    {long __index_2;
    long __number_2=number(_IfAssn_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _IfAssn_);
    F = son(1,N);
    AL1 = rbroth(F);
    AL2 = rbroth(AL1);
    if (!(eq(rbroth(AL2), nil()))) goto __END_30432;
    __add_constraint(sm___4, NULL, 2, F, N);
    __add_constraint(sm___5, NULL, 2, AL1, N);
    __add_constraint(sm___6, NULL, 2, AL2, N);
__END_30432: ;
    }
    }
__END_26637: ;
}
{ ELEMENT E,AL,N,__tmp_36094;
    {long __index_2;
    long __number_2=number(_LetAssn_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _LetAssn_);
    __tmp_36094 = son(1,N);
    E = rbroth(__tmp_36094);
    AL = rbroth(E);
    if (!(eq(rbroth(AL), nil()))) goto __END_30436;
    __add_constraint(sm___7, NULL, 2, E, N);
    __add_constraint(sm___8, NULL, 2, AL, N);
__END_30436: ;
    }
    }
__END_26638: ;
}
{ ELEMENT ID,EL,N;
    {long __index_2;
    long __number_2=number(_DefAssnAppl_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _DefAssnAppl_);
    ID = son(1,N);
    EL = rbroth(ID);
    if (!(eq(rbroth(EL), nil()))) goto __END_30439;
    __add_constraint(sm___9, NULL, 2, ID, N);
{ ELEMENT E;
for(E = son(1, EL ); !eq(nil(),E); E = rbroth(E)) {
    __add_constraint(sm___10, NULL, 2, E, N);
__END_30443: ;
    }
__END_26640: ;
}
__END_30439: ;
    }
    }
__END_26639: ;
}
{ ELEMENT E,N,__tmp_36108;
    {long __index_2;
    long __number_2=number(_BasicConstr_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _BasicConstr_);
    E = son(1,N);
    __tmp_36108 = rbroth(E);
    if (!(eq(rbroth(__tmp_36108), nil()))) goto __END_30444;
    __add_constraint(sm___11, NULL, 2, E, N);
__END_30444: ;
    }
    }
__END_26641: ;
}
{ ELEMENT Cond,C,N;
    {long __index_2;
    long __number_2=number(_CondConstr_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _CondConstr_);
    Cond = son(1,N);
    C = rbroth(Cond);
    if (!(eq(rbroth(C), nil()))) goto __END_30446;
    __add_constraint(sm___12, NULL, 2, Cond, N);
    __add_constraint(sm___13, NULL, 2, C, N);
__END_30446: ;
    }
    }
__END_26642: ;
}
{ ELEMENT E,N;
    {long __index_2;
    long __number_2=number(_Attribute_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Attribute_);
for(E = son(1, N ); !eq(nil(),E); E = rbroth(E)) {
    if (!(eq(rbroth(E), nil()))) goto __END_30450;
    __add_constraint(sm___14, NULL, 2, E, N);
__END_30450: ;
    }
__END_30449: ;
    }
    }
__END_26643: ;
}
{ ELEMENT E,N;
    {long __index_2;
    long __number_2=number(_Function_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Function_);
for(E = son(1, N ); !eq(nil(),E); E = rbroth(E)) {
    if (!(eq(rbroth(E), nil()))) goto __END_30452;
    __add_constraint(sm___15, NULL, 2, E, N);
__END_30452: ;
    }
__END_30451: ;
    }
    }
__END_26644: ;
}
{ ELEMENT F,N;
    {long __index_2;
    long __number_2=number(_Predicate_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Predicate_);
for(F = son(1, N ); !eq(nil(),F); F = rbroth(F)) {
    if (!(eq(rbroth(F), nil()))) goto __END_30454;
    __add_constraint(sm___16, NULL, 2, F, N);
__END_30454: ;
    }
__END_30453: ;
    }
    }
__END_26645: ;
}
{ ELEMENT ID,EL,N;
    {long __index_2;
    long __number_2=number(_FuncAppl_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _FuncAppl_);
    ID = son(1,N);
    EL = rbroth(ID);
    if (!(eq(rbroth(EL), nil()))) goto __END_30455;
{ ELEMENT DECL;
    DECL = mxs_Decl("cmax_spec.cm", 685, ID);
    if (!(eq(DECL, nil( )))){
    __add_constraint(sm___17, NULL, 2, DECL, N);
    }
    else {
    }
    __END_26657: ;
{ ELEMENT E;
for(E = son(1, EL ); !eq(nil(),E); E = rbroth(E)) {
    __add_constraint(sm___18, NULL, 2, E, N);
__END_30459: ;
    }
__END_26647: ;
}
    if ((is(DECL, _Attribute_))||(is(DECL, _AttrDecl_))){
    __add_constraint(sm___19, NULL, 2, DECL, N);
    }
    else {
    }
    __END_26658: ;
__END_26659: ;
}
__END_30455: ;
    }
    }
__END_26646: ;
}
{ ELEMENT F,E,N;
    {long __index_2;
    long __number_2=number(_FormulaCase_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _FormulaCase_);
    F = son(1,N);
    E = rbroth(F);
    if (!(eq(rbroth(E), nil()))) goto __END_30460;
    __add_constraint(sm___20, NULL, 2, F, N);
    __add_constraint(sm___21, NULL, 2, E, N);
__END_30460: ;
    }
    }
__END_26648: ;
}
{ ELEMENT E,N,__tmp_36130;
    {long __index_2;
    long __number_2=number(_PatternCase_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _PatternCase_);
    __tmp_36130 = son(1,N);
    E = rbroth(__tmp_36130);
    if (!(eq(rbroth(E), nil()))) goto __END_30463;
    __add_constraint(sm___22, NULL, 2, E, N);
__END_30463: ;
    }
    }
__END_26649: ;
}
{ ELEMENT E1,E2,N,__tmp_36133;
    {long __index_2;
    long __number_2=number(_LetExpr_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _LetExpr_);
    __tmp_36133 = son(1,N);
    E1 = rbroth(__tmp_36133);
    E2 = rbroth(E1);
    if (!(eq(rbroth(E2), nil()))) goto __END_30465;
    __add_constraint(sm___23, NULL, 2, E1, N);
    __add_constraint(sm___24, NULL, 2, E2, N);
__END_30465: ;
    }
    }
__END_26650: ;
}
{ ELEMENT E,N;
    {long __index_2;
    long __number_2=number(_StringExpr_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _StringExpr_);
for(E = son(1, N ); !eq(nil(),E); E = rbroth(E)) {
    __add_constraint(sm___25, NULL, 2, E, N);
__END_30469: ;
    }
__END_30468: ;
    }
    }
__END_26651: ;
}
{ ELEMENT ID,EL,N;
    {long __index_2;
    long __number_2=number(_PredAppl_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _PredAppl_);
    ID = son(1,N);
    EL = rbroth(ID);
    if (!(eq(rbroth(EL), nil()))) goto __END_30470;
    __add_constraint(sm___26, NULL, 2, ID, N);
{ ELEMENT E;
for(E = son(1, EL ); !eq(nil(),E); E = rbroth(E)) {
    __add_constraint(sm___27, NULL, 2, E, N);
__END_30474: ;
    }
__END_26653: ;
}
__END_30470: ;
    }
    }
__END_26652: ;
}
{ ELEMENT F1,F2,N;
    {long __index_2;
    long __number_2=number(_Formula_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Formula_);
    F1 = son(1,N);
    if (!(is(F1, _Formula_))) goto __END_30475;
    F2 = rbroth(F1);
    if (!(is(F2, _Formula_))) goto __END_30475;
    if (!(eq(rbroth(F2), nil()))) goto __END_30475;
    __add_constraint(sm___28, NULL, 2, F1, N);
    __add_constraint(sm___29, NULL, 2, F2, N);
__END_30475: ;
    }
    }
__END_26654: ;
}
{ ELEMENT F,N;
    {long __index_2;
    long __number_2=number(_Formula_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    N = element(__index_2, _Formula_);
    F = son(1,N);
    if (!(is(F, _Formula_))) goto __END_30478;
    if (!(eq(rbroth(F), nil()))) goto __END_30478;
    __add_constraint(sm___30, NULL, 2, F, N);
__END_30478: ;
    }
    }
__END_26655: ;
}
__END_26601: ;
}
}
#undef attrs_used_in_assns/* non-synchronizing and strict variable access */
#define mxs_attrs_used_in_assns(f,l,a) (!eq(attrs_used_in_assns_PTR__(a),nil()) ? ( (Variable*)mxi_etop(f,l,attrs_used_in_assns_PTR__(a) ) ) -> value : nil() )
#define attrs_used_in_assns(a) (mxs_attrs_used_in_assns(__FILE__,__LINE__,a))
static int sm___31 (ELEMENT __args[])
{
#define A __args[0]
    int __update=0; ELEMENT __vptr,__v,__e; ELEMENT *__vptr1;
    __e=mxs_used_attributes("cmax_spec.cm", 719, A);
    __vptr=attrs_used_in_assns_PTR__(mxs_enclStructure("cmax_spec.cm", 719, A));
    __vptr1= !eq(__vptr, nil()) ? etop(__vptr) : NULL; 
    __v= __vptr1 != NULL ? *__vptr1 : nil();
    if ((!eq(issubset(__e,__v),true())) && __vptr1 != NULL){ *__vptr1=union(__e,__v); __update=1; }
    return __update;
#undef A
}
static void activate_constrs___2(void)
{
{ 
{ ELEMENT A;
    {long __index_2;
    long __number_2=number(_Assertion_);
    for(__index_2=1; __index_2<= __number_2; __index_2++) {
    A = element(__index_2, _Assertion_);
    __add_constraint(sm___31, NULL, 1, A);
__END_30480: ;
    }
    }
__END_26656: ;
}
__END_26602: ;
}
}
ELEMENT activate_constrs__(void)
{
    if (Verbose) fprintf(stderr,"activating constraints ");
    activate_constrs___1();
    activate_constrs___2();
    if (Verbose) fprintf(stderr,"... done\n");
    return btoe(1);
}
